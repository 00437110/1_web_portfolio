Remember that the Github has the app complete to see and you can ask people

You can even post your progress in it

2.1: The brogram

0 10 reactjs will be used. it is one of the most used frameworks in the market, for front end. We will build a gym planning workout tracker

this has a predefined plan

1 10 Initialize reactjs projects

1 15 we can close our files from the web portfolio

1 35 using vite as our build tool\

vite.dev/guide/

it will create all the files we need to

1 55 to create a vite project just run this command 
npm create vite@latest
we need to have node already

2 25 within the fullstack course folder we will run the terminal
npm create vite@latest
Select react and name it:
2_brogram

you can use vite to build html and css projects

select just javascript

It will be created in the folder

3 40 
Done. Now run:

  cd 2_brogram
  npm install
  npm run dev

for npm run dev use
Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy RemoteSigned
First to be allowed to run the script. you can check your actual status in powershell 

3 45 npm install will install all the packages dependencies needed for our reactjs project from the npm node package manager ecosystem

3 55 then run dev so you can boot it up and develop

4 40 before starting the project, let's check what has been installed

5 00 vite.config.js is not needed, it is only the config files for react

5 05 eslin.config.js not to be touched either, just configuration

5 20 .gitignore is an important file, to keep some information or secret keys or environment variables to your device.

it is so it will not interact with git or your github page

5 38 for example node_modules, When someone else might download our project, they can install the node modules, which means that we don't have to commit our node modules to this two underscore program project.

We can ignore it and anyone else can install them


5 55  node modules, dist and dist-ssr will be used in future projects

node_modules will NOT be touched. It is where al npm installations go

6 05 The publics folder will be used for serving up any assets, font families, images of our project

it has vite.svg for use

6 17 the src directory is where we will be working mainly. All of our files of developing will be here

6 28 README. md is a written summary of our project. There's an example that you can adapt for your projects. Copy and paste it for your projects

the readme is asummary or extra information

6 50 package.json is the specs file for the react project, important. it has names, scripts we might use, it has dependencies needed from the NPM ecosystem that we need for our project, and some developer dependencies

"dependencies": {
    "react": "^19.1.0",
    "react-dom": "^19.1.0"
  }

7 20 package-lock.json is NOT to be touched upon 

7 25 there's an index.html. Vite builds our react project: it takes all our coude and injects it in the div id= root
<div id="root"></div>

It takes App, the react app and injects it in the div

7 50 This is where we will be working in App.jsx

import './App.css'

function App() 

in main.jsx is what is added

8 40 most code will be written in App.jsx, also anything we will render

8 55 app jsx has a lot of default code. we will delete it

we will keep


function App() {
  const [count, setCount] = useState(0)

  return (
    <>
      
    </>
  )
}

export default App


9 20 delete app.css, empty index.css


10 15 all the code will be injected to index.html

10 45 create a new folder in src, called components, it will have all components to be rendered

then create utils, it has utility information

11 30 igo to github repo and go to the brogram project, you will find the utils and you just copy its index.js

12 40 Now with the index.js in place, we will write the components to comparmentalize it

13 00 First we will write down all the components we might need

introduction\
workout planner
editable workout plan for a particular day
save all elements

Visualize the app

13 30  create file in components, name it Grid.jsx

jsx is an extension for a react js file

13 40 create the default grid function which returns the grid component

export default function Grid(){
    return(
        <></>
    )
}
14 15 all components are capitalized. Create component Layout.jsx and add same equivalent togrid

15 00 create a modal component in same folder. Modals are overlays or popout, not its own screen

it will be an option to see what the exercise is like

15 35 it is similar to the others

The "export" keyword allows us to import it into other files and folder directories, specifically the app.

We need to be able to access these components within the app

we only expect this import and makes syntax cleaner

16 25 Create WorkoutCard.jsx

16 50 grid will contain 30 days for workout, it should save, allow to see workouts and progress thru them

17 00 workoutcard takes care about the logic. When a user clicks on the grid, it will allow them to input stuff. it will be contained in here

17 20 layout wraps all the app, so it is important for the header and footer

17 45 modal is a pop up overlay for when we need to display the exercise descriptions

17 55 import  fancy.css for this code. save the file in the src directory

19 15 import the fancy.css into the project, in main.jsx

import './fanta.css'

it is imported into the main.jsx in the last step before we inject our app into the index.html

19 55 index.css is going to be responsible for the layouts. 

20 10 dark mode will be allowed in this project.

20 30 now we can bootup our application

20 50 we can run in the terminal "npm run dev", this command is in the package.json  as "dev":"vite"

21 20 it will run in http://localhost:5173/. You can see it in the browser. it will be blank.

21 50 fanta.css reads the user preferred theme. Light theme shows a white page, dark theme shows a black page

22 00 you can right click on the page and choose inspect

then in developer tooles, you can see a paintbrush that you can see  the preferrred theme or automatic

if light theme is chosen, it will change to white page.

it depends on system settings





